services:
  postgres:
    image: postgres
    networks:
      - carental-network
    ports:
      - 5432:5432
    env_file:
      - ./db/.env
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - db_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  nginx:
    restart: always
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    networks:
      - carental-network
    ports:
      - 3060:80
    depends_on:
      - api
      - client
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: development
    networks:
      - carental-network
    command: npm run start:dev
    volumes:
      - ./api:/usr/src/app:delegated
      - api_node_modules:/usr/src/app/node_modules
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:carental@postgres:5432/carental
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      target: development
    networks:
      - carental-network
    command: npm run dev
    volumes:
      - ./client:/app:delegated
      - client_node_modules:/usr/src/app/node_modules
      - client_assets:/usr/src/app/public
    env_file:
      - .env
    environment:
      - WDS_SOCKET_PORT=0
      - API_BASE_URL=http://api:5000

volumes:
  db_pgdata:
  api_node_modules:
  client_node_modules:
  client_assets:

networks:
  carental-network:
